
from web3 import Web3
#from web3.middleware import geth_poa_middleware


## import time library to track current time

import time

## import json library to read json files



abi = [{"name": "Transfer", "inputs": [{"name": "sender", "type": "address", "indexed": True}, {"name": "receiver", "type": "address", "indexed": True}, {"name": "tokenId", "type": "uint256", "indexed": True}], "anonymous": False, "type": "event"}, {"name": "Approval", "inputs": [{"name": "owner", "type": "address", "indexed": True}, {"name": "approved", "type": "address", "indexed": True}, {"name": "tokenId", "type": "uint256", "indexed": True}], "anonymous": False, "type": "event"}, {"name": "ApprovalForAll", "inputs": [{"name": "owner", "type": "address", "indexed": True}, {"name": "operator", "type": "address", "indexed": True}, {"name": "approved", "type": "bool", "indexed": False}], "anonymous": False, "type": "event"}, {"stateMutability": "nonpayable", "type": "constructor", "inputs": [], "outputs": []}, {"stateMutability": "pure", "type": "function", "name": "supportsInterface", "inputs": [{"name": "interface_id", "type": "bytes4"}], "outputs": [{"name": "", "type": "bool"}]}, {"stateMutability": "view", "type": "function", "name": "balanceOf", "inputs": [{"name": "_owner", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"stateMutability": "view", "type": "function", "name": "ownerOf", "inputs": [{"name": "_tokenId", "type": "uint256"}], "outputs": [{"name": "", "type": "address"}]}, {"stateMutability": "view", "type": "function", "name": "getApproved", "inputs": [{"name": "_tokenId", "type": "uint256"}], "outputs": [{"name": "", "type": "address"}]}, {"stateMutability": "view", "type": "function", "name": "isApprovedForAll", "inputs": [{"name": "_owner", "type": "address"}, {"name": "_operator", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"stateMutability": "payable", "type": "function", "name": "transferFrom", "inputs": [{"name": "_from", "type": "address"}, {"name": "_to", "type": "address"}, {"name": "_tokenId", "type": "uint256"}], "outputs": []}, {"stateMutability": "payable", "type": "function", "name": "safeTransferFrom", "inputs": [{"name": "_from", "type": "address"}, {"name": "_to", "type": "address"}, {"name": "_tokenId", "type": "uint256"}], "outputs": []}, {"stateMutability": "payable", "type": "function", "name": "safeTransferFrom", "inputs": [{"name": "_from", "type": "address"}, {"name": "_to", "type": "address"}, {"name": "_tokenId", "type": "uint256"}, {"name": "_data", "type": "bytes"}], "outputs": []}, {"stateMutability": "payable", "type": "function", "name": "approve", "inputs": [{"name": "_approved", "type": "address"}, {"name": "_tokenId", "type": "uint256"}], "outputs": []}, {"stateMutability": "nonpayable", "type": "function", "name": "setApprovalForAll", "inputs": [{"name": "_operator", "type": "address"}, {"name": "_approved", "type": "bool"}], "outputs": []}, {"stateMutability": "nonpayable", "type": "function", "name": "mint", "inputs": [{"name": "_to", "type": "address"}, {"name": "_tokenId", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"stateMutability": "nonpayable", "type": "function", "name": "burn", "inputs": [{"name": "_tokenId", "type": "uint256"}], "outputs": []}, {"stateMutability": "payable", "type": "function", "name": "deposit", "inputs": [], "outputs": []}, {"stateMutability": "nonpayable", "type": "function", "name": "makeChoice", "inputs": [{"name": "_choice", "type": "uint256"}], "outputs": []}, {"stateMutability": "nonpayable", "type": "function", "name": "reveal", "inputs": [], "outputs": []}, {"stateMutability": "view", "type": "function", "name": "player0", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"stateMutability": "view", "type": "function", "name": "player1", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"stateMutability": "view", "type": "function", "name": "player0Choice", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"stateMutability": "view", "type": "function", "name": "player1Choice", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"stateMutability": "view", "type": "function", "name": "player0ChoiceMade", "inputs": [], "outputs": [{"name": "", "type": "bool"}]}, {"stateMutability": "view", "type": "function", "name": "player1ChoiceMade", "inputs": [], "outputs": [{"name": "", "type": "bool"}]}, {"stateMutability": "view", "type": "function", "name": "winner", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"stateMutability": "view", "type": "function", "name": "choice_legend", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "string"}]}, {"stateMutability": "view", "type": "function", "name": "player0choice_legend", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"stateMutability": "view", "type": "function", "name": "player1choice_legend", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"stateMutability": "view", "type": "function", "name": "deposit_balance", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"stateMutability": "view", "type": "function", "name": "name", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"stateMutability": "view", "type": "function", "name": "symbol", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"stateMutability": "view", "type": "function", "name": "tokenURI", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"stateMutability": "view", "type": "function", "name": "totalSupply", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"stateMutability": "view", "type": "function", "name": "owner", "inputs": [], "outputs": [{"name": "", "type": "address"}]}]
bytecode = "0x601f6040527f68747470733a2f2f6170692e62616262792e78797a2f6d657461646174612f0060605260408051806024556020820180516025555050503360065573e729faf2146ba6094eeb50ef64cabe9a5d02a7ce60075560136040527f524f434b2050415045522053434953534f525300000000000000000000000000606052604080518060135560208201805160145550505060036040527f525053000000000000000000000000000000000000000000000000000000000060605260408051806018556020820180516019555050506064602255600160055530600455610f536100f9630000000039610f536000016300000000f3600436101561000d57610ca4565b60003560e01c6323b872dd8118610062576004358060a01c610f4e576101a0526024358060a01c610f4e576101c0526101a051610100526101c05161012052604435610140523361016052610060610e17565b005b6342842e0e8118610084576000610600526106008051806101e05250506100b4565b63b88d4fde81186101b057606435600401610400813511610f4e578035806101e052602082018181610200375050505b6004358060a01c610f4e576101a0526024358060a01c610f4e576101c0526101a051610100526101c051610120526044356101405233610160526100f6610e17565b60006101c0513b11156101ae5763150b7a0261064052608033610660526101a051610680526044356106a052806106c05280610660016101e0518082526020820181818361020060045afa90505050805180602083010181600003601f163682375050601f19601f8251602001011690508101505060206106406104a461065c60006101c0515af161018d573d600060003e3d6000fd5b60203d10610f4e57610640518060201b610f4e57610b0052610b0051610620525b005b63095ea7b38118610287576004358060a01c610f4e576040526000602435602052600052604060002054606052600060605114610f4e5760605160405114610f4e5733600060243560205260005260406000205414608052600360605160205260005260406000208033602052600052604060002090505460a05260805161023a5760a05161023d565b60015b15610f4e5760405160016024356020526000526040600020556024356040516060517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600060c0a4005b63d0e30db081186102c657601254348181830110610f4e578082019050905060125560065433186102b95760016102bf565b60075433145b15610f4e57005b34610f4e576301ffc9a7811861036d576004358060201b610f4e576040526040517f01ffc9a7000000000000000000000000000000000000000000000000000000006080527f80ac58cd0000000000000000000000000000000000000000000000000000000060a052600060605260006002905b6020810260800151831861035257600160605261035d565b60010181811861033a575b5050606051905060c052602060c0f35b6370a0823181186103aa576004358060a01c610f4e57604052600060405114610f4e57600260405160205260005260406000205460605260206060f35b636352211e81186103d9576000600435602052600052604060002054604052600060405114610f4e5760206040f35b63081812fc8118610416576000600060043560205260005260406000205414610f4e57600160043560205260005260406000205460405260206040f35b63e985e9c58118610468576004358060a01c610f4e576040526024358060a01c610f4e576060526003604051602052600052604060002080606051602052600052604060002090505460805260206080f35b63a22cb46581186104ed576004358060a01c610f4e576040526024358060011c610f4e576060523360405114610f4e576060516003336020526000526040600020806040516020526000526040600020905055604051337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160605160805260206080a3005b6340c10f198118610566576004358060a01c610f4e576080526004543318610f4e57600060805114610f4e5760805160405260243560605261052d610d2b565b60243560805160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600060a0a4600160a052602060a0f35b6342966c68811861060b5733604052600435606052610586610100610caa565b6101005115610f4e5760006004356020526000526040600020546101005260006101005114610f4e57610100516040526004356060526105c4610dd0565b610100516040526004356060526105d9610d7d565b6004356000610100517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000610120a4005b635bc565fb811861068a576006543318610651576004356008556001600a55600d6004356020526000526040600020805480600e55600182018054600f55505050610688565b6007543318610688576004356009556001600b55600d60043560205260005260406000208054806010556001820180546011555050505b005b63a475b5dd811861094057600a546106a35760006106a7565b600b545b1561093e57600954600854186106c8576000600c5561093e610ebb5661093e565b600854156106d75760006106de565b6001600954145b61092857600854156106f15760006106f8565b6002600954145b61090e5760016008541861070f5760095415610712565b60005b6108f45760016008541861072b5760026009541461072e565b60005b6108da576002600854186107455760095415610748565b60005b6108c05760026008541861076157600160095414610764565b60005b6108a6576009541561077757600061077e565b6002600854145b61088c5760095415610791576000610798565b6001600854145b610881576001600954186107af57600854156107b2565b60005b610867576001600954186107cb576002600854146107ce565b60005b61084d576002600954186107e557600854156107e8565b60005b6108335760026009541861080157600160085414610804565b60005b610819576000600c5561093e610ebb5661093e565b600754600c55610827610ebb565b61093e610ed15661093e565b600654600c55610841610ebb565b61093e610ed15661093e565b600654600c5561085b610ebb565b61093e610ed15661093e565b600754600c55610875610ebb565b61093e610ed15661093e565b600654600c5561093e565b600754600c5561089a610ebb565b61093e610ed15661093e565b600654600c556108b4610ebb565b61093e610ed15661093e565b600754600c556108ce610ebb565b61093e610ed15661093e565b600754600c556108e8610ebb565b61093e610ed15661093e565b600654600c55610902610ebb565b61093e610ed15661093e565b600654600c5561091c610ebb565b61093e610ed15661093e565b600754600c55610936610ebb565b61093e610ed1565b005b63d42863ac81186109575760065460405260206040f35b63d30895e4811861096e5760075460405260206040f35b6332b75ea581186109855760085460405260206040f35b63d8b1f219811861099c5760095460405260206040f35b63ad6a847f81186109b357600a5460405260206040f35b636b31280f81186109ca57600b5460405260206040f35b63dfbf53ae81186109e157600c5460405260206040f35b63a4ef66d68118610a4657602080604052600d6004356020526000526040600020816040018154808252600183016020830181548152505050805180602083010181600003601f163682375050601f19601f8251602001011690509050810190506040f35b63906f66f18118610a965760208060405280604001600e5480825260208201600f5481525050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b6375da396b8118610ae657602080604052806040016010548082526020820160115481525050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b638627436b8118610afd5760125460405260206040f35b6306fdde038118610b7a5760208060405280604001601354808252602082016000602083601f010460048111610f4e578015610b4c57905b806014015460208202840152600101818118610b35575b50505050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b6395d89b418118610bf75760208060405280604001601854808252602082016000602083601f010460048111610f4e578015610bc957905b806019015460208202840152600101818118610bb2575b50505050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b633c130d908118610c745760208060405280604001601d54808252602082016000602083601f010460048111610f4e578015610c4657905b80601e015460208202840152600101818118610c2f575b50505050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b6318160ddd8118610c8b5760225460405260206040f35b638da5cb5b8118610ca25760235460405260206040f35b505b60006000fd5b60006060516020526000526040600020546080526040516080511460a05260016060516020526000526040600020546040511460c0526003608051602052600052604060002080604051602052600052604060002090505460e05260a051610d145760c051610d17565b60015b610d235760e051610d26565b60015b815250565b6000606051602052600052604060002054610f4e57604051600060605160205260005260406000205560026040516020526000526040600020805460018181830110610f4e5780820190509050815550565b604051600060605160205260005260406000205418610f4e57600060006060516020526000526040600020556002604051602052600052604060002080546001808210610f4e5780820390509050815550565b604051600060605160205260005260406000205418610f4e576000600160605160205260005260406000205414610e1557600060016060516020526000526040600020555b565b6101605160405261014051606052610e30610180610caa565b6101805115610f4e5760006101205114610f4e576101005160405261014051606052610e5a610dd0565b6101005160405261014051606052610e70610d7d565b6101205160405261014051606052610e86610d2b565b6101405161012051610100517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000610180a4565b600460085560046009556000600a556000600b55565b6000600060006000601254600c546000f115610f4e57600060125560016080526022546080518181830110610f4e5780820190509050602255600c54604052602254606052610f1e610d2b565b602254600c5460007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600060a0a4565b600080fd"
provider_rpc = {
    'development': 'https://testnet.telos.net/evm',
    'alphanet': '',
}
web3 = Web3(Web3.HTTPProvider(provider_rpc['development']))  # Change to correct network
#web3.middleware_onion.inject(geth_poa_middleware, layer=0)



print(f'Attempting to deploy from account: { account_from["address"] }')

Incrementer = web3.eth.contract(abi=abi, bytecode=bytecode)

RPS_WIN = "RPS_WIN"

RPS = "RPS"

address = "0xb72fc236Ab043029776b9d25e99A5B6456A2e16D"

construct_txn = Incrementer.constructor().buildTransaction(
    {
        'from': account_from['address'],
        'nonce': web3.eth.getTransactionCount(account_from['address']),
        'gasPrice': web3.toWei('505', 'gwei'),
    }
)

tx_create = web3.eth.account.signTransaction(construct_txn, account_from['private_key'])

tx_hash = web3.eth.sendRawTransaction(tx_create.rawTransaction)
tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)

print(f'Contract deployed at address: { tx_receipt.contractAddress }')
